 What's going on you too? My name is Johnny. I just wanted to show you guys the Python module argPars How to use it and why I like to use it so much So we're gonna create a simple program here to calculate the volume of a cylinder So to do that will import the math package to get pie We'll create a simple function called cylinder volume will pass in two Arguments radius and height Calculate the volume of that cylinder and return the volume So if we wanted to run this program if name equals main Let's print out a cylinder with volume Or with radius two and let's say height four So we jump over here. Let's run this program ArgPars demo All right, so we get a volume of 15.265 so To put it here to Google test this out. All right, so looks like our program works I would say a much better way to do this would be using the argPars module and I'll show you why Import argPars so the first thing we're going to do is create a parser So this is basically a container to hold our arguments. We'll give it a description Calculate volume of a cylinder volume Okay, and then we will add an argument Inside of this parser Radius We're going to specify the type as an integer the default value is a string how we need an integer to integer to calculate this value We'll give it a help as well To describe this argument We'll do the same thing for height All right, so now we just have to parse these args parser dot pars args All right, so down here we just need to do args dot radius Ars dot height We're using args because we parse the args and gave it the variable args Then radius here for this first position argument height here for the second positional argument So let's run this program up here. So radius of two height of four all right, so we get the same volume Let's say we were to do four two That'd be a different volume because these are positional arguments. We use our help flag We can see the description and we can see that their positional arguments the radius must go first the height second So that's what positional arguments are I would say optional arguments are much better you use in this situation To do that we just need to do Dash dash so that's the long notation you need to have the long notation It's also good to have a shorthand notation So just a little r and then big h because the little h is already reserved for the help flag So let's try this again radius to height four All right, so we're getting the same volume Because these are flags we can do it in any order we want You can see we get the same thing there we go to our help flag You can see they're now optional arguments. They were positional arguments So using flags using optional arguments really good way to do things As you can see the help menus will cluttered I like to clean that up using Medovlar equals an empty string Medovlar equals an empty string The var equals All right, so if we see on the help flag it's a little cleaner there So because these are optional arguments If you specify one It will just run through the program when it's optional if you don't specify an argument It will give it a value of none so that's why we're seeing a float and none type Try to multiply two with none and we're getting an error So good way to prevent this make this more clear required equals true So let's try this here All right, so as you can see argument height is required All right, so the last thing I wanted to show you guys are mutually exclusive arguments So let's create a container for that Add mutually exclusive group we're going to add two arguments to this group The action is stored true Meaning when you give it an action of store true the default Becomes false and then when you call this flag it will be given a value of true So help Print quiet We're gonna do the same thing for a second argument, but we will call this verbose All right to show you what this is doing. I'm gonna change a few things here Give the volume a variable name of volume If r's dot quiet we will simply print this volume If args dot verbose Gonna print out message here So Volume so if it's verbose we're gonna print out volume of a cylinder with radius and height is whatever that volume may be And then if we don't specify either quiet or verbose we're going to print Volume of cylinder Equals whatever that volume is So that's how mutually exclusive arguments work You don't need to specify either you could specify one But you cannot specify more than one so if we added arguments to this group We can only specify one quiet and verbose are commonly used quiet just meaning you print out One little thing such as the answer verbose meaning you print out a lot more things such as the arguments you specified Being radius and height here. So let's give this a shot So radius to height 4 because the volume of a cylinder we got our 50.265 we specify quiet We're just going to get the volume there we specify verbose We're gonna see volume of a cylinder with radius to and height 4 is equal to our 50.265 All right, so that's the Python module arg parse I highly recommend using it to use all the time in industry you can quickly run programs on your command line You can use the help flag to see exactly what you need to pass into your program and You don't need to change things in the original program which can be messy. It's it's dangerous as well So I highly recommend learning it. I'm gonna post a link in the descriptions to the documentation for the arg parse library I encourage you to look through it and run through the tutorial Comment below if you have any questions. Thanks so much guys